{"version":3,"sources":["components/HeaderComponent.js","containers/HeaderComponentContainer.js","data/users.js","data/userRegistation.js","reducers/reducer.js","components/LoginComponent.js","containers/LoginComponentContainer.js","components/DashBoardComponent.js","containers/DashBoardComponentContainer.js","components/RegistationComponent.js","containers/RegistationComponentContainer.js","components/mainAppComponent.js","serviceWorker.js","index.js"],"names":["HeaderComponent","className","to","React","Component","HeaderComponentContainer","connect","state","console","log","user","userRegistation","id","rootReducer","combineReducers","usersDetaild","users","login","action","type","push","data","LoginComponent","props","submitClickHandler","e","userName","password","DashBoardisOpen","userLoginDetails","map","key","index","username","setState","userNameChandler","target","value","passwordChangeHandler","onChange","this","onClick","LoginComponentContainer","dispatch","loginSucess","isTrue","DashBoardComponent","usersList","name","age","gender","email","DashBoardComponentContainer","Reagistation","changeUserId","Id","changeUserName","changeUserPassword","createJsonHandler","JSONObj","loadRegistation","RegistationComponentContainer","obj","RegistationComponent","_store","createStore","maiAppComponent","store","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iSAkBeA,E,YAfX,aAAc,uE,sEAIV,OACI,yBAAKC,UAAU,eACX,yBAAKA,UAAU,gBACb,6BAAK,kBAAC,IAAD,CAAMC,GAAG,gBAAT,iBACL,6BAAK,kBAAC,IAAD,CAAMA,GAAG,UAAT,gB,GATOC,IAAMC,WCUrBC,EADkBC,aART,SAACC,GAErB,OADAC,QAAQC,IAAIF,GACL,KAM8C,KAAxBD,CAA8BN,G,gBCXhD,GACfU,KAAK,CAAC,CACF,GAAK,EACL,KAAO,QACP,IAAQ,KACR,OAAS,OACT,MAAU,kBACV,QAAY,cAEZ,CACA,GAAO,EACP,KAAO,QACP,IAAQ,KACR,OAAS,OACT,MAAU,kBACV,QAAY,cAEZ,CACA,GAAK,EACL,KAAO,QACP,IAAQ,KACR,OAAS,OACT,MAAU,kBACV,QAAY,cAEZ,CACA,GAAK,EACL,KAAO,QACP,IAAQ,KACR,OAAS,OACT,MAAU,kBACV,QAAY,cAEZ,CACA,GAAK,EACL,KAAO,QACP,IAAQ,KACR,OAAS,OACT,MAAU,kBACV,QAAY,cAEZ,CACA,GAAK,EACL,KAAO,QACP,IAAQ,KACR,OAAS,OACT,MAAU,kBACV,QAAY,gBC/CD,GACXC,gBAAgB,CACZ,CACIC,GAAG,IACH,SAAY,SACZ,SAAY,SAGd,CACEA,GAAG,IACH,SAAY,mBACZ,SAAY,aAGd,CACEA,GAAG,IACH,SAAY,mBACZ,SAAY,e,yjBCCxB,IAIeC,EAJKC,YAAgB,CAClCC,aALF,WAA8C,IAAxBR,EAAuB,uDAAfS,EAC5B,OAD2C,iCACpCT,GAKPU,MAhBF,WAAiD,IAAlCV,EAAiC,uDAAzBI,EAAiBO,EAAQ,uCAC9C,MAAmB,gBAAfA,EAAOC,KACF,EAAP,GAAYZ,GACU,aAAfW,EAAOC,MACfZ,EAAMI,gBAAgBS,KAAKF,EAAOG,MAC3B,EAAP,GAAWd,IAELA,KC8CMe,E,YApDX,WAAaC,GAAO,IAAD,8BACf,4CAAMA,KASVC,mBAAqB,SAACC,GACnB,IAAIC,EAAW,EAAKA,SAChBC,EAAW,EAAKA,SAChBC,GAAkB,EAErB,EAAKL,MAAMM,iBAAiBC,KAAI,SAASC,EAAKC,GACvCD,EAAIE,WAAaP,GAAYC,IAAaI,EAAIJ,WAC9CC,GAAkB,MAKzB,EAAKM,SAAS,CAACN,gBAAgBA,KAtBhB,EA0BnBO,iBAAmB,SAACV,GAEhB,EAAKC,SAAWD,EAAEW,OAAOC,OA5BV,EA8BnBC,sBAAwB,SAACb,GAErB,EAAKE,SAAWF,EAAEW,OAAOC,OA9BzB,EAAK9B,MAAQ,CACVqB,iBAAgB,GAHJ,E,sEAmCf,OAEI,yBAAK3B,UAAU,cAEX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,SAAf,SACA,yBAAKA,UAAU,YAAf,aAAoC,8BAAM,2BAAOkB,KAAK,OAAOoB,SAAUC,KAAKL,qBAC5E,yBAAKlC,UAAU,YAAf,aAAoC,mCAAQ,2BAAOkB,KAAK,WAAWoB,SAAUC,KAAKF,0BACjF,4BAAQrC,UAAYuC,KAAKjC,MAAMqB,gBAAiB,SAAS,OAAQa,QAASD,KAAKhB,oBAA/E,UACA,4BAAQvB,UAAYuC,KAAKjC,MAAMqB,gBAAiB,OAAO,UAAU,kBAAC,IAAD,CAAM1B,GAAG,WAAT,a,GA9CzDC,IAAMC,WCcpBsC,EAFiBpC,aAZR,SAACC,GACzB,MAAO,CACCsB,iBAAiBtB,EAAMU,MAAMN,oBAGV,SAACgC,GAC5B,MAAM,CACFC,YAAa,SAACC,GACVF,EAAS,CAACxB,KAAK,eAAgBkB,MAAMQ,QAIbvC,CAA6CgB,GCiB9DwB,E,YA7BX,WAAYvB,GAAO,uE,sEAKnB,OACI,6BACIiB,KAAKjB,MAAMwB,UAAUjB,KAAI,SAASC,GAC9B,OACI,yBAAK9B,UAAU,aAEf,yBAAKA,UAAU,QAAf,OAA2B8B,EAAInB,IAC/B,yBAAKX,UAAU,SAAf,QAA6B8B,EAAIiB,MACjC,yBAAK/C,UAAU,QAAf,QAA4B8B,EAAIkB,KAChC,yBAAKhD,UAAU,QAAf,WAA+B8B,EAAImB,QACnC,yBAAKjD,UAAU,SAAf,UAA+B8B,EAAIoB,OAEnC,yBAAKlD,UAAU,QAAf,iB,GAlBaE,IAAMC,WCWxBgD,EAFqB9C,aARZ,SAACC,GAErB,MAAM,CACFwC,UAAUxC,EAAMQ,aAAaL,QAKwB,KAAzBJ,CAA+BwC,GC4BpDO,E,YApCX,WAAY9B,GAAQ,IAAD,8BACf,4CAAMA,KAKV+B,aAAe,SAAC7B,GACZ,EAAK8B,GAAK9B,EAAEW,OAAOC,OAPJ,EASnBmB,eAAiB,SAAC/B,GACd,EAAKC,SAAWD,EAAEW,OAAOC,OAVV,EAanBoB,mBAAqB,SAAChC,GAClB,EAAKE,SAAWF,EAAEW,OAAOC,OAdV,EAgBnBqB,kBAAoB,SAACjC,GACjB,IAAIkC,EAAU,CAAC,GAAK,EAAKJ,GAAI,SAAW,EAAK7B,SAAU,SAAW,EAAKC,UACvE,EAAKJ,MAAMqC,gBAAgBD,IAlBZ,E,sEAuBf,OACI,yBAAK1D,UAAU,oBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,UAAf,gBAA0C,6BAC1C,0DAAuC,8BAAM,2BAAOkB,KAAK,SAASoB,SAAUC,KAAKc,iBAA6B,6BAC9G,2CAAgB,8BAAM,2BAAOnC,KAAK,OAAOoB,SAAUC,KAAKgB,mBAA+B,6BACvF,2CAAgB,8BAAM,2BAAOrC,KAAK,OAAOoB,SAAUC,KAAKiB,uBAAmC,6BAC3F,6BAAK,4BAAQhB,QAASD,KAAKkB,mBAAtB,iB,GA/BEvD,IAAMC,WCgBlByD,EAHuBvD,aAbd,SAACC,GAEzB,OADIC,QAAQC,IAAIF,GACTA,KAEqB,SAACoC,GAC7B,MAAM,CACFiB,gBAAgB,SAACE,GAEbnB,EAAS,CAACxB,KAAK,YAAYE,KAAKyC,QAKFxD,CAA6CyD,G,QCL7EC,EAASC,YAAYpD,GAkBZqD,E,iLAfX,OACI,kBAAC,IAAD,CAAUC,MAAOH,GACjB,yBAAK/D,UAAU,YACX,kBAAC,IAAD,KAEA,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOmE,KAAK,SAASC,UAAW3B,IAChC,kBAAC,IAAD,CAAO0B,KAAK,SAASC,UAAWjB,IAChC,kBAAC,IAAD,CAAOgB,KAAK,eAAeC,UAAWR,W,GAVnB1D,IAAMC,WCCjBkE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAAsBC,SAASC,eAAe,SD0HxD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6a469b4b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nclass HeaderComponent extends React.Component{\r\n    constructor(){\r\n        super();\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"header-main\">\r\n                <div className=\"header-inner\">\r\n                  <div><Link to=\"/registation\">Registration</Link></div>\r\n                  <div><Link to=\"/login\">Login</Link></div>\r\n                  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default HeaderComponent;","import { connect } from 'react-redux';\r\nimport HeaderComponent from '../components/HeaderComponent';\r\n\r\nconst mapStateToProps = (state)=>{\r\n    console.log(state);\r\n    return {\r\n\r\n    }\r\n    return state;\r\n}\r\n\r\nconst HeaderComponentContainer = connect(mapStateToProps,null)(HeaderComponent);\r\nexport default HeaderComponentContainer;","export default {\r\nuser:[{\r\n    \"id\":1,\r\n    \"name\":\"test1\",\r\n    \"age\" : \"11\",\r\n    \"gender\":\"male\",\r\n    \"email\" : \"test1@gmail.com\",\r\n    \"phoneNo\" : \"9415346313\"\r\n    },\r\n    {\r\n    \"id\" : 2,\r\n    \"name\":\"test2\",\r\n    \"age\" : \"12\",\r\n    \"gender\":\"male\",\r\n    \"email\" : \"test2@gmail.com\",\r\n    \"phoneNo\" : \"9415346314\"\r\n    },\r\n    {\r\n    \"id\":3,\r\n    \"name\":\"test3\",\r\n    \"age\" : \"13\",\r\n    \"gender\":\"male\",\r\n    \"email\" : \"test3@gmail.com\",\r\n    \"phoneNo\" : \"9415346315\"\r\n    },\r\n    {\r\n    \"id\":4,\r\n    \"name\":\"test4\",\r\n    \"age\" : \"14\",\r\n    \"gender\":\"male\",\r\n    \"email\" : \"test4@gmail.com\",\r\n    \"phoneNo\" : \"9415346316\"\r\n    },\r\n    {\r\n    \"id\":5,\r\n    \"name\":\"test5\",\r\n    \"age\" : \"15\",\r\n    \"gender\":\"male\",\r\n    \"email\" : \"test5@gmail.com\",\r\n    \"phoneNo\" : \"9415346317\"\r\n    },\r\n    {\r\n    \"id\":6,\r\n    \"name\":\"test6\",\r\n    \"age\" : \"16\",\r\n    \"gender\":\"male\",\r\n    \"email\" : \"test6@gmail.com\",\r\n    \"phoneNo\" : \"9415346318\"\r\n    }\r\n    ]}","export default {\r\n    userRegistation:[\r\n        {\r\n            id:\"0\",\r\n            \"username\": \"ganesh\",\r\n            \"password\": 'dalei'\r\n           \r\n          },\r\n          {\r\n            id:\"1\",\r\n            \"username\": \"hruday@gmail.com\",\r\n            \"password\": 'hruday123'\r\n         \r\n          },\r\n          {\r\n            id:\"3\",\r\n            \"username\": \"hruday@gmail.com\",\r\n            \"password\": 'hruday123'\r\n            \r\n          },\r\n\r\n        \r\n    ]\r\n}","import { combineReducers } from \"redux\";\r\nimport users from '../data/users';\r\nimport userRegistation from '../data/userRegistation';\r\n\r\nfunction login(state = userRegistation, action) {\r\n  if (action.type == \"LOGIN_STATUS\") {\r\n    return { ...state }\r\n  }else if(action.type == \"USER_DATA\"){\r\n   state.userRegistation.push(action.data);\r\n   return {...state}\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction usersDetaild(state = users, action) {\r\n  return state;\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  usersDetaild,\r\n  login\r\n});\r\nexport default rootReducer;","import React from 'react';\r\nimport {withRouter,Link, Redirect} from 'react-router-dom';\r\n\r\nclass LoginComponent extends React.Component{\r\n \r\n    constructor (props){\r\n        super(props)\r\n        this.state = {\r\n           DashBoardisOpen:false,\r\n           \r\n        }\r\n        let userName;\r\n        let password;\r\n\r\n    }\r\n    submitClickHandler = (e)=>{\r\n       var userName = this.userName;\r\n       var password = this.password;\r\n       var DashBoardisOpen = false;\r\n      \r\n        this.props.userLoginDetails.map(function(key, index){\r\n            if(key.username === userName && password === key.password){\r\n               DashBoardisOpen = true;\r\n           \r\n            }\r\n         \r\n        })\r\n        this.setState({DashBoardisOpen:DashBoardisOpen})\r\n        \r\n        \r\n    }\r\n    userNameChandler = (e)=>{\r\n       \r\n        this.userName = e.target.value;\r\n    }\r\n    passwordChangeHandler = (e)=>{\r\n       \r\n        this.password = e.target.value;\r\n    }\r\n    render(){\r\n        return(\r\n            \r\n            <div className=\"login-main\">\r\n             \r\n                <div className=\"login-inner\">\r\n                    <div className=\"login\">Login</div>\r\n                    <div className=\"userName\">UserName: <span><input type=\"test\" onChange={this.userNameChandler}/></span></div>\r\n                    <div className=\"password\">Password: <span>  <input type=\"password\" onChange={this.passwordChangeHandler}/></span></div>\r\n                     <button className={(this.state.DashBoardisOpen)?\"hidden\":\"show\"} onClick={this.submitClickHandler}>Submit</button>\r\n                     <button className={(this.state.DashBoardisOpen)?\"show\":\"hidden\"}><Link to=\"./Board\">Go</Link></button>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LoginComponent;","import {connect} from 'react-redux';\r\nimport LoginComponent from '../components/LoginComponent';\r\n\r\nconst maptoStateProps = (state)=>{\r\nreturn {\r\n        userLoginDetails:state.login.userRegistation,\r\n}\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\nreturn{\r\n    loginSucess: (isTrue)=>{\r\n        dispatch({type:\"LOGIN_STATUS\", value:isTrue});\r\n    }\r\n}\r\n}\r\nconst LoginComponentContainer = connect(maptoStateProps, mapDispatchToProps)(LoginComponent);\r\n\r\nexport default LoginComponentContainer;","import React,{ useState, useEffect } from 'react';\r\n\r\nclass DashBoardComponent extends React.Component {\r\n    constructor(props){\r\n        super();\r\n      \r\n    }\r\nrender(){\r\n    return (\r\n        <div>{\r\n            this.props.usersList.map(function(key){\r\n                return (\r\n                    <div className=\"dashBoard\">\r\n      \r\n                    <div className=\"NAme\">id: {key.id}</div>\r\n                    <div className=\"NAme2\">Name {key.name}</div>\r\n                    <div className=\"NAme\">age: {key.age}</div>\r\n                    <div className=\"NAme\">gender: {key.gender}</div>\r\n                    <div className=\"NAme2\">email: {key.email}</div>\r\n                    \r\n                    <div className=\"view\">View</div>\r\n                </div>\r\n                )\r\n            })\r\n        }\r\n            \r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\nexport default DashBoardComponent;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DashBoardComponent from '../components/DashBoardComponent';\r\nconst mapStateToProps = (state)=>{\r\n   \r\n    return{\r\n        usersList:state.usersDetaild.user,\r\n    }\r\nreturn state;\r\n}\r\n\r\nconst DashBoardComponentContainer = connect(mapStateToProps, null)(DashBoardComponent);\r\n\r\nexport default DashBoardComponentContainer;","import React from 'react';\r\n\r\nclass Reagistation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let Id;\r\n        let userName;\r\n        let password;\r\n    }\r\n    changeUserId = (e) => {\r\n        this.Id = e.target.value;\r\n    }\r\n    changeUserName = (e) => {\r\n        this.userName = e.target.value;\r\n    }\r\n\r\n    changeUserPassword = (e) => {\r\n        this.password = e.target.value;\r\n    }\r\n    createJsonHandler = (e)=>{\r\n        var JSONObj = {\"Id\":this.Id, \"username\":this.userName, \"password\":this.password};\r\n        this.props.loadRegistation(JSONObj)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"registation-main\">\r\n                <div className=\"registation-inner\">\r\n                    <div className=\"header\">Registration</div><br />\r\n                    <div>UserID : &nbsp;&nbsp;&nbsp;&nbsp; <span><input type=\"number\" onChange={this.changeUserId} /></span></div><br />\r\n                    <div>UserName : <span><input type=\"test\" onChange={this.changeUserName} /></span></div><br />\r\n                    <div>Password : <span><input type=\"test\" onChange={this.changeUserPassword} /></span></div><br />\r\n                    <div><button onClick={this.createJsonHandler}>submit</button></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Reagistation;","import {connect} from \"react-redux\";\r\nimport RegistationComponent from '../components/RegistationComponent'\r\nconst mapStateToProps = (state)=>{\r\n    console.log(state);\r\nreturn state;\r\n}\r\nconst mapDispatchToProps =  (dispatch)=>{\r\nreturn{\r\n    loadRegistation:(obj)=>{\r\n       \r\n        dispatch({type:\"USER_DATA\",data:obj})\r\n    }\r\n}\r\n    \r\n}\r\nconst RegistationComponentContainer = connect(mapStateToProps, mapDispatchToProps)(RegistationComponent)\r\n\r\n\r\nexport default RegistationComponentContainer","import React from 'react';\r\nimport '../styles/main.scss';\r\nimport HeaderComponentContainer from '../containers/HeaderComponentContainer';\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux'\r\nimport rootReducer from \"../reducers/reducer\";\r\nimport LoginComponentContainer from '../containers/LoginComponentContainer';\r\nimport DashBoardComponentContainer from '../containers/DashBoardComponentContainer';\r\nimport RegistationComponentContainer from '../containers/RegistationComponentContainer';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nconst _store = createStore(rootReducer);\r\nclass maiAppComponent extends  React.Component{\r\nrender(){\r\n    return(\r\n        <Provider store={_store}>\r\n        <div className=\"main-app\">\r\n            <BrowserRouter>\r\n            \r\n            <HeaderComponentContainer/>\r\n            <Route path=\"/login\" component={LoginComponentContainer}/>\r\n            <Route path=\"/Board\" component={DashBoardComponentContainer} />\r\n            <Route path=\"/registation\" component={RegistationComponentContainer}></Route>\r\n            </BrowserRouter>\r\n        </div>\r\n        </Provider>\r\n    )\r\n}\r\n}\r\nexport default maiAppComponent;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport MainAppComponent from './components/mainAppComponent';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MainAppComponent />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}